name: CI
on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]
concurrency:
  # Cancel previous actions from the same PR or branch except 'main' branch.
  # See https://docs.github.com/en/actions/using-jobs/using-concurrency and https://docs.github.com/en/actions/learn-github-actions/contexts for more info.
  group: concurrency-group::${{ github.workflow }}::${{ github.event.pull_request.number > 0 && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}${{ github.ref_name == 'main' && format('::{0}', github.run_id) || ''}}
  cancel-in-progress: ${{ github.ref_name != 'main' }}
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pre-commit/action@v3.0.1
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
        bazelversion: [7.6.1, 8.4.2]
        folder: [".", "e2e/smoke", "e2e/llvm_toolchain", "e2e/systemd", "e2e/toolchains"]
        include:
          - os: "ubuntu-22.04-arm"
            folder: "e2e/smoke"
    steps:
      - uses: actions/checkout@v5
      - uses: bazel-contrib/setup-bazel@0.15.0
        with:
          repository-cache: true
          bazelrc: |
            common --announce_rc
            common --color=yes
            build --disk_cache=~/.cache/bazel
            test --test_output=errors
            test --test_env=XDG_CACHE_HOME
      - name: Configure Bazel version
        working-directory: ${{ matrix.folder }}
        run: |
          echo "${{ matrix.bazelversion }}" > .bazelversion
          bazel version
      - name: Test
        working-directory: ${{ matrix.folder }}
        run: |
          ldd --version
          bazel test //...
      - name: Test docs extensions
        if: matrix.bazelversion == '8.4.2' && matrix.folder == '.'
        run: |
          bazel test //docs:update_tests
  package:
    runs-on: ubuntu-latest
    needs: [test, pre-commit]
    env:
      prefix: "bazel_linux_packages-${{ github.ref_name }}"
    steps:
      - uses: actions/checkout@v5
      - name: Build release artifacts and prepare release notes
        run: ./.github/workflows/release.sh "${{ github.ref_name }}" "${{ env.prefix }}" release_notes.txt
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          generate_release_notes: true
          body_path: release_notes.txt
          fail_on_unmatched_files: true
          files: |
            ${{ env.prefix }}.tar.zst
            ${{ env.prefix }}.tar.xz
